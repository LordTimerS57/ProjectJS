{"ast":null,"code":"async function fetchClients() {\n  try {\n    const response = await fetch(\"http://localhost:5000/bank\");\n    if (!response.ok) {\n      throw new Error(\"Erreur lors de la récupération des données\");\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return null;\n  }\n}\n;\nasync function Add(a, b, c) {\n  try {\n    const response = await fetch('http://localhost:5000/bank/add', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        a,\n        b,\n        c\n      })\n    });\n    console.log(response.ok);\n    if (response.ok) {\n      alert(\"Client ajouté avec succès\");\n      return true;\n    } else {\n      alert(\"Erreur lors de l'ajout du client\");\n      return false;\n    }\n  } catch (error) {}\n}\n_c = Add;\nasync function Edit(a, b, c) {\n  try {\n    const response = await fetch('http://localhost:5000/bank/update/:id', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        a,\n        b,\n        c\n      })\n    });\n    console.log(response.ok);\n    if (response.ok) {\n      alert(\"Client ajouté avec succès\");\n      return true;\n    } else {\n      alert(\"Erreur lors de l'ajout du client\");\n      return false;\n    }\n  } catch (error) {}\n}\n_c2 = Edit;\nexport { fetchClients, Add };\nvar _c, _c2;\n$RefreshReg$(_c, \"Add\");\n$RefreshReg$(_c2, \"Edit\");","map":{"version":3,"names":["fetchClients","response","fetch","ok","Error","data","json","error","console","Add","a","b","c","method","headers","body","JSON","stringify","log","alert","_c","Edit","_c2","$RefreshReg$"],"sources":["C:/Users/Ainar/OneDrive/Desktop/Projet_JS/front/src/Template/APIClient.js"],"sourcesContent":["async function fetchClients() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/bank\");\r\n      if (!response.ok) {\r\n        throw new Error(\"Erreur lors de la récupération des données\");\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n      return null;\r\n    }\r\n};\r\nasync function Add(a, b, c) {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/bank/add', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ a, b, c })\r\n    });\r\n    console.log(response.ok);\r\n      if (response.ok) {\r\n          alert(\"Client ajouté avec succès\");\r\n          return true;\r\n      } else {\r\n          alert(\"Erreur lors de l'ajout du client\");\r\n          return false;\r\n      }\r\n    } catch (error) {\r\n      \r\n    }\r\n}\r\nasync function Edit(a, b, c) {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/bank/update/:id', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ a, b, c })\r\n    });\r\n    console.log(response.ok);\r\n      if (response.ok) {\r\n          alert(\"Client ajouté avec succès\");\r\n          return true;\r\n      } else {\r\n          alert(\"Erreur lors de l'ajout du client\");\r\n          return false;\r\n      }\r\n  } catch (error) {\r\n    \r\n  }\r\n}\r\n\r\nexport { fetchClients , Add };"],"mappings":"AAAA,eAAeA,YAAYA,CAAA,EAAG;EAC1B,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;IAC1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;IAC/D;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,IAAI;EACb;AACJ;AAAC;AACD,eAAeE,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC1B,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC7DW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC;IAClC,CAAC,CAAC;IACFJ,OAAO,CAACU,GAAG,CAACjB,QAAQ,CAACE,EAAE,CAAC;IACtB,IAAIF,QAAQ,CAACE,EAAE,EAAE;MACbgB,KAAK,CAAC,2BAA2B,CAAC;MAClC,OAAO,IAAI;IACf,CAAC,MAAM;MACHA,KAAK,CAAC,kCAAkC,CAAC;MACzC,OAAO,KAAK;IAChB;EACF,CAAC,CAAC,OAAOZ,KAAK,EAAE,CAEhB;AACJ;AAACa,EAAA,GAlBcX,GAAG;AAmBlB,eAAeY,IAAIA,CAACX,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EAC3B,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,CAAC;QAAEC,CAAC;QAAEC;MAAE,CAAC;IAClC,CAAC,CAAC;IACFJ,OAAO,CAACU,GAAG,CAACjB,QAAQ,CAACE,EAAE,CAAC;IACtB,IAAIF,QAAQ,CAACE,EAAE,EAAE;MACbgB,KAAK,CAAC,2BAA2B,CAAC;MAClC,OAAO,IAAI;IACf,CAAC,MAAM;MACHA,KAAK,CAAC,kCAAkC,CAAC;MACzC,OAAO,KAAK;IAChB;EACJ,CAAC,CAAC,OAAOZ,KAAK,EAAE,CAEhB;AACF;AAACe,GAAA,GAlBcD,IAAI;AAoBnB,SAASrB,YAAY,EAAGS,GAAG;AAAG,IAAAW,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}